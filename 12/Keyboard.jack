// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack
/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int address;

    /** Initializes the keyboard. */
    function void init() {
        let address = 24576;
        do Output.init();
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var int current;
        
        let current = Memory.peek(address);
        return current;
    }

    /**	Waits until a key is pressed on the keyboard and released,
     *  then echoes the key to the screen, and returns the character 
     *  of the pressed key. */
    function char readChar() {
        var char c, d;

        do Output.display_cursor();

        let c = 0;
        while (c = 0) {
            let c = Keyboard.keyPressed();
        }

        let d = 1;
        while (~(d = 0)) {
            let d = Keyboard.keyPressed();
        }
        do Output.printChar(c);
        return c;
    }

    /**	Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its value. Also handles user backspaces. */
    function String readLine(String message) {
        var String str;
        var char c;
        var int cursor_row, cursor_col;
        var Array empty_map;

        do Output.printString(message);

        let str = String.new(64);
        while (true) {
            let c = Keyboard.readChar();
            if (c = 128) {
                do Output.println();
                return str;
            }
            else {
                if (c = 129) {
                    if (str.length() > 0) {
                        do str.eraseLastChar();
                        do Output.display_empty_map_at_cursor();
                        do Output.backSpace();
                    }
                }
                else {
                    do str.appendChar(c);
                }
            }
        }

        return str;
    }   

    /** Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its integer value (until the first non-digit character in the
     *  entered text is detected). Also handles user backspaces. */
    function int readInt(String message) {
        var String msg;
        var int int_value;

        let msg = Keyboard.readLine(message);
        let int_value = msg.intValue();
        return int_value;
    }
}
